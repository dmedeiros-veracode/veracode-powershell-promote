trigger: none

parameters:
- name: applicationName
  displayName: Application Name
  type: string

steps:
  - task: PowerShell@2
    inputs:
      targetType: 'inline'
      script: |
        echo "Downloading the latest version of the Veracode Java API"
        $versionstring = curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/maven-metadata.xml | findstr /r "latest";
        $version  = $versionstring.Trim() -replace '<latest>','' -replace '</latest>','';
        curl https://repo1.maven.org/maven2/com/veracode/vosp/api/wrappers/vosp-api-wrappers-java/$version/vosp-api-wrappers-java-$version-dist.zip -o dist.zip
        7z e dist.zip -y
        $appname = $(applicationName)
        java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action getapplist | tee appidlist.txt
        $veracodeappid = Get-Content .\appidlist.txt | findstr $appname | %{ $_.Split('"')[1]; }
        echo "Pulling the Sandbox ID List"
        java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action getsandboxlist -appid $veracodeappid | tee sandboxlist.txt
        $veracodesandboxid = Get-Content .\sandboxlist.txt | findstr /r "sandbox_id=" | %{ $_.Split('"')[9]; } | Select-Object -Last 1
        echo "Pulling the Build ID List"
        java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action getbuildlist -appid $veracodeappid -sandboxid $veracodesandboxid | tee getbuildlist.txt
        $veracodebuildid = Get-Content .\getbuildlist.txt | findstr /r "build_id=" | %{ $_.Split('"')[1]; } | Select-Object -Last 1
        java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action passfail -appname $appname -sandboxid $veracodesandboxid > passfail.txt
        cat passfail.txt
        $scanresult = Get-Content .\passfail.txt | %{ $_.Split('"')[9]; }
        echo $scanresult
        If ($scanresult -eq "Pass")
        {
          Write-Output "The Veracode Sandbox Scan Passed, Promoting the Latest Scan"
          $veracodebuildid = Get-Content .\getbuildlist.txt | findstr /r "build_id=" | %{ $_.Split('"')[1]; } | Select-Object -Last 1
          echo $veracodebuildid
          java -jar VeracodeJavaAPI.jar -vid $(vid) -vkey $(vkey) -action PromoteSandbox -buildid $veracodebuildid
        }
        elseif ($scanresult -eq "Did Not Pass")
        {   
          Write-Output "The Veracode Sandbox Scan Did Not Pass, Failing the Build "
          throw "Exception Thrown for Failed Policy Scan"
        }